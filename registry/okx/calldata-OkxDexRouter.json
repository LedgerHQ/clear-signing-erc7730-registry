{
  "$schema": "../../specs/erc7730-v1.schema.json",
  "context": {
    "$id": "OKX: DEX Router",
    "contract": {
      "deployments": [
        {
          "chainId": 1,
          "address": "0x2E1Dee213BA8d7af0934C49a23187BabEACa8764"
        }
      ],
      "abi": [
        {
          "type": "function",
          "name": "DENOMINATOR",
          "inputs": [],
          "outputs": [
            {
              "name": "result",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "view"
        },
        {
          "type": "function",
          "name": "_APPROVE_PROXY",
          "inputs": [],
          "outputs": [
            {
              "name": "result",
              "type": "address",
              "internalType": "address"
            }
          ],
          "stateMutability": "view"
        },
        {
          "type": "function",
          "name": "_WETH",
          "inputs": [],
          "outputs": [
            {
              "name": "result",
              "type": "address",
              "internalType": "address"
            }
          ],
          "stateMutability": "view"
        },
        {
          "type": "function",
          "name": "_WNATIVE_RELAY",
          "inputs": [],
          "outputs": [
            {
              "name": "result",
              "type": "address",
              "internalType": "address"
            }
          ],
          "stateMutability": "view"
        },
        {
          "type": "function",
          "name": "commissionRateLimit",
          "inputs": [],
          "outputs": [
            {
              "name": "result",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "view"
        },
        {
          "type": "function",
          "name": "smartSwapByInvest",
          "inputs": [
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "batchesAmount",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "batches",
              "type": "tuple[][]",
              "internalType": "struct DexRouter.RouterPath[][]",
              "components": [
                {
                  "name": "mixAdapters",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "assetTo",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "rawData",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "extraData",
                  "type": "bytes[]",
                  "internalType": "bytes[]"
                },
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "extraData",
              "type": "tuple[]",
              "internalType": "struct PMMLib.PMMSwapRequest[]",
              "components": [
                {
                  "name": "pathIndex",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "payer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "salt",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "isPushOrder",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "extension",
                  "type": "bytes",
                  "internalType": "bytes"
                }
              ]
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "smartSwapByInvestWithRefund",
          "inputs": [
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "batchesAmount",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "batches",
              "type": "tuple[][]",
              "internalType": "struct DexRouter.RouterPath[][]",
              "components": [
                {
                  "name": "mixAdapters",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "assetTo",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "rawData",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "extraData",
                  "type": "bytes[]",
                  "internalType": "bytes[]"
                },
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "extraData",
              "type": "tuple[]",
              "internalType": "struct PMMLib.PMMSwapRequest[]",
              "components": [
                {
                  "name": "pathIndex",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "payer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "salt",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "isPushOrder",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "extension",
                  "type": "bytes",
                  "internalType": "bytes"
                }
              ]
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "refundTo",
              "type": "address",
              "internalType": "address"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "smartSwapByOrderId",
          "inputs": [
            {
              "name": "orderId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "batchesAmount",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "batches",
              "type": "tuple[][]",
              "internalType": "struct DexRouter.RouterPath[][]",
              "components": [
                {
                  "name": "mixAdapters",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "assetTo",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "rawData",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "extraData",
                  "type": "bytes[]",
                  "internalType": "bytes[]"
                },
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "extraData",
              "type": "tuple[]",
              "internalType": "struct PMMLib.PMMSwapRequest[]",
              "components": [
                {
                  "name": "pathIndex",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "payer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "salt",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "isPushOrder",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "extension",
                  "type": "bytes",
                  "internalType": "bytes"
                }
              ]
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "smartSwapTo",
          "inputs": [
            {
              "name": "orderId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "receiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "batchesAmount",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "batches",
              "type": "tuple[][]",
              "internalType": "struct DexRouter.RouterPath[][]",
              "components": [
                {
                  "name": "mixAdapters",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "assetTo",
                  "type": "address[]",
                  "internalType": "address[]"
                },
                {
                  "name": "rawData",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "extraData",
                  "type": "bytes[]",
                  "internalType": "bytes[]"
                },
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "extraData",
              "type": "tuple[]",
              "internalType": "struct PMMLib.PMMSwapRequest[]",
              "components": [
                {
                  "name": "pathIndex",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "payer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toTokenAmountMax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "salt",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "isPushOrder",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "extension",
                  "type": "bytes",
                  "internalType": "bytes"
                }
              ]
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "swapWrap",
          "inputs": [
            {
              "name": "orderId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "rawdata",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "outputs": [],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "swapWrapToWithBaseRequest",
          "inputs": [
            {
              "name": "orderId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "receiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ],
          "outputs": [],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "uniswapV3SwapCallback",
          "inputs": [
            {
              "name": "amount0Delta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "amount1Delta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ],
          "outputs": [],
          "stateMutability": "nonpayable"
        },
        {
          "type": "function",
          "name": "uniswapV3SwapTo",
          "inputs": [
            {
              "name": "receiver",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minReturn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pools",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "uniswapV3SwapToWithBaseRequest",
          "inputs": [
            {
              "name": "orderId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "receiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "pools",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "unxswapByOrderId",
          "inputs": [
            {
              "name": "srcToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minReturn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pools",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "unxswapTo",
          "inputs": [
            {
              "name": "srcToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minReturn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "receiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "pools",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "unxswapToWithBaseRequest",
          "inputs": [
            {
              "name": "orderId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "receiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "baseRequest",
              "type": "tuple",
              "internalType": "struct DexRouter.BaseRequest",
              "components": [
                {
                  "name": "fromToken",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "toToken",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "fromTokenAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minReturnAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadLine",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "pools",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            }
          ],
          "outputs": [
            {
              "name": "returnAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "stateMutability": "payable"
        },
        {
          "type": "function",
          "name": "version",
          "inputs": [],
          "outputs": [
            {
              "name": "result",
              "type": "string",
              "internalType": "string"
            }
          ],
          "stateMutability": "view"
        }
      ]
    }
  },
  "metadata": {
    "owner": "OKX DEX",
    "info": {
      "legalName": "OKX",
      "url": "https://www.okx.com"
    }
  },
  "display": {
    "formats": {
      "smartSwapTo(uint256,address,(uint256,address,uint256,uint256,uint256),uint256[],(address[],address[],uint256[],bytes[],uint256)[][],(uint256,address,address,address,uint256,uint256,uint256,uint256,bool,bytes)[])": {
        "intent": "Swap",
        "fields": [
          {
            "label": "",
            "format": "raw",
            "path": "#.orderId"
          },
          {
            "label": "Beneficiary",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "local",
                "ens"
              ]
            },
            "path": "#.receiver"
          },
          {
            "path": "#.baseRequest",
            "fields": [
              {
                "label": "Token to Send",
                "format": "raw",
                "path": "fromToken"
              },
              {
                "label": "Token to Receive",
                "format": "addressName",
                "params": {
                  "types": [
                    "token"
                  ],
                  "sources": [
                    "local",
                    "ens"
                  ]
                },
                "path": "toToken"
              },
              {
                "label": "Amount to Send",
                "format": "amount",
                "path": "fromTokenAmount"
              },
              {
                "label": "Minimum amount to Receive",
                "format": "amount",
                "path": "minReturnAmount"
              },
              {
                "label": "",
                "format": "raw",
                "path": "deadLine"
              }
            ]
          },
          {
            "label": "",
            "format": "amount",
            "path": "#.batchesAmount.[]"
          },
          {
            "path": "#.batches.[].[]",
            "fields": [
              {
                "label": "",
                "format": "addressName",
                "params": {
                  "types": [
                    "wallet",
                    "eoa",
                    "contract",
                    "token",
                    "collection"
                  ],
                  "sources": [
                    "local",
                    "ens"
                  ]
                },
                "path": "mixAdapters.[]"
              },
              {
                "label": "",
                "format": "addressName",
                "params": {
                  "types": [
                    "token"
                  ],
                  "sources": [
                    "local",
                    "ens"
                  ]
                },
                "path": "assetTo.[]"
              },
              {
                "label": "",
                "format": "raw",
                "path": "rawData.[]"
              },
              {
                "label": "",
                "format": "raw",
                "path": "extraData.[]"
              },
              {
                "label": "",
                "format": "raw",
                "path": "fromToken"
              }
            ]
          }
        ],
        "required": [
          "#.receiver",
          "#.baseRequestfromToken",
          "#.baseRequesttoToken",
          "#.baseRequestfromTokenAmount",
          "#.baseRequestminReturnAmount"
        ]
      },
      "smartSwapByOrderId(uint256,(uint256,address,uint256,uint256,uint256),uint256[],(address[],address[],uint256[],bytes[],uint256)[][],(uint256,address,address,address,uint256,uint256,uint256,uint256,bool,bytes)[])": {
        "intent": "Swap",
        "fields": [
          {
            "label": "",
            "format": "raw",
            "path": "#.orderId"
          },
          {
            "path": "#.baseRequest",
            "fields": [
              {
                "label": "Token to Send",
                "format": "raw",
                "path": "fromToken"
              },
              {
                "label": "Token to Receive",
                "format": "addressName",
                "params": {
                  "types": [
                    "token"
                  ],
                  "sources": [
                    "local",
                    "ens"
                  ]
                },
                "path": "toToken"
              },
              {
                "label": "Amount to Send",
                "format": "amount",
                "path": "fromTokenAmount"
              },
              {
                "label": "Minimum amount to Receive",
                "format": "amount",
                "path": "minReturnAmount"
              },
              {
                "label": "",
                "format": "raw",
                "path": "deadLine"
              }
            ]
          },
          {
            "label": "",
            "format": "amount",
            "path": "#.batchesAmount.[]"
          },
          {
            "path": "#.batches.[].[]",
            "fields": [
              {
                "label": "",
                "format": "addressName",
                "params": {
                  "types": [
                    "wallet",
                    "eoa",
                    "contract",
                    "token",
                    "collection"
                  ],
                  "sources": [
                    "local",
                    "ens"
                  ]
                },
                "path": "mixAdapters.[]"
              },
              {
                "label": "",
                "format": "addressName",
                "params": {
                  "types": [
                    "token"
                  ],
                  "sources": [
                    "local",
                    "ens"
                  ]
                },
                "path": "assetTo.[]"
              },
              {
                "label": "",
                "format": "raw",
                "path": "rawData.[]"
              },
              {
                "label": "",
                "format": "raw",
                "path": "extraData.[]"
              },
              {
                "label": "",
                "format": "raw",
                "path": "fromToken"
              }
            ]
          }
        ],
        "required": [
          "#.baseRequestfromToken",
          "#.baseRequesttoToken",
          "#.baseRequestfromTokenAmount",
          "#.baseRequestminReturnAmount"
        ]
      }
    }
  }
}