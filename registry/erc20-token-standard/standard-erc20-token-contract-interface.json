{
  "$schema": null,
  "context": {
    "$id": "Standard ERC20 Token Contract Interface",
    "contract": {
      "deployments": [
        {
          "chainId": 11155111,
          "address": "0x666f72589ec58f9ad1e8282fe517eac34fa45aa9"
        }
      ],
      "abi": [
        {
          "type": "function",
          "name": "allowance",
          "inputs": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            },
            {
              "name": "spender",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [
            {
              "name": "remaining",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "view",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "approve",
          "inputs": [
            {
              "name": "spender",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [
            {
              "name": "",
              "type": "bool",
              "internalType": "bool",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "balanceOf",
          "inputs": [
            {
              "name": "owner",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [
            {
              "name": "",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "view",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "decimals",
          "inputs": [],
          "outputs": [
            {
              "name": "",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "view",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "name",
          "inputs": [],
          "outputs": [
            {
              "name": "",
              "type": "string",
              "internalType": "string",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "view",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "symbol",
          "inputs": [],
          "outputs": [
            {
              "name": "",
              "type": "string",
              "internalType": "string",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "view",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "totalSupply",
          "inputs": [],
          "outputs": [
            {
              "name": "",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "view",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "transfer",
          "inputs": [
            {
              "name": "to",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [
            {
              "name": "",
              "type": "bool",
              "internalType": "bool",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "transferFrom",
          "inputs": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address",
              "components": null,
              "indexed": null,
              "unit": null
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [
            {
              "name": "",
              "type": "bool",
              "internalType": "bool",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        }
      ],
      "addressMatcher": null,
      "factory": null
    }
  },
  "metadata": {
    "owner": "ERC20 Token Standard",
    "info": {
      "legalName": "Ethereum Foundation",
      "url": "https://ethereum.org/en/developers/docs/standards/tokens/erc-20/"
    }
  },
  "display": {
    "formats": {
      "mintToken(uint256,uint256,address,uint256,bytes)": {
        "intent": "Mint a new token",
        "fields": [
          {
            "label": "Event Id",
            "format": "raw",
            "params": null,
            "path": "#.eventId",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Token Id",
            "format": "raw",
            "params": null,
            "path": "#.tokenId",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Receiver",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook"
              ]
            },
            "path": "#.receiver",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Expiration Time",
            "format": "date",
            "params": {
              "encoding": "timestamp"
            },
            "path": "#.expirationTime",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Signature",
            "format": "raw",
            "params": null,
            "path": "#.signature",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "setFeeReceiver(address)": {
        "intent": "Set the fee receiver address",
        "fields": [
          {
            "label": "Fee Receiver",
            "format": "addressName",
            "params": {
              "types": [
                "wallet",
                "eoa"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#._feeReceiver",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "setMigrationFee(uint256)": {
        "intent": "Set the migration fee",
        "fields": [
          {
            "label": "Migration Fee",
            "format": "amount",
            "params": null,
            "path": "#._migrationFee",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "setValidSigner(address)": {
        "intent": "Set the valid signer address",
        "fields": [
          {
            "label": "Valid Signer",
            "format": "addressName",
            "params": {
              "types": [
                "wallet",
                "eoa",
                "contract"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens"
              ]
            },
            "path": "#._validSigner",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "transferOwnership(address)": {
        "intent": "Transfer ownership of the contract",
        "fields": [
          {
            "label": "New Owner",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#.newOwner",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "addTimeRange(uint256,uint256,uint256,uint256,uint256)": {
        "intent": "Add a new time range to a staking pool",
        "fields": [
          {
            "label": "Pool Id",
            "format": "raw",
            "params": null,
            "path": "#._poolId",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Amount",
            "format": "amount",
            "params": null,
            "path": "#._amount",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Start Timestamp",
            "format": "date",
            "params": {
              "encoding": "timestamp"
            },
            "path": "#._startTimestamp",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "End Time Stamp",
            "format": "date",
            "params": {
              "encoding": "timestamp"
            },
            "path": "#._endTimeStamp",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Cap Per Position",
            "format": "raw",
            "params": null,
            "path": "#._capPerPosition",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#._poolId",
          "#._amount",
          "#._startTimestamp",
          "#._endTimeStamp",
          "#._capPerPosition"
        ]
      },
      "claimApeCoin(address)": {
        "intent": "Claim BAKC staking rewards",
        "fields": [
          {
            "label": "BAYC NFT Pairs",
            "format": "raw",
            "params": {},
            "path": "#._baycPairs",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "MAYC NFT Pairs",
            "format": "raw",
            "params": {},
            "path": "#._maycPairs",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#._recipient",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#._baycPairs",
          "#._maycPairs",
          "#._recipient"
        ]
      },
      "claimBAKC((uint128,uint128)[],(uint128,uint128)[],address)": {
        "intent": "Claim BAKC rewards to recipient",
        "fields": [
          {
            "label": "BAKC BAYC Pairs",
            "format": "raw",
            "params": null,
            "path": "#._baycPairs.[]",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "BAKC MAYC Pairs",
            "format": "raw",
            "params": null,
            "path": "#._maycPairs.[]",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens"
              ]
            },
            "path": "#._recipient",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#._baycPairs.[]",
          "#._maycPairs.[]",
          "#._recipient"
        ]
      },
      "claimBAYC(uint256[],address)": {
        "intent": "Withdraw MAYC NFTs to recipient",
        "fields": [
          {
            "label": "MAYC NFTs",
            "format": "calldata",
            "params": {
              "types": [
                "collection"
              ],
              "sources": [
                "local",
                "ens",
                "addressBook"
              ],
              "structure": {
                "tokenId": "uint32",
                "amount": "tokenAmount"
              }
            },
            "path": "#._nfts",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook"
              ]
            },
            "path": "#._recipient",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "claimMAYC(uint256[],address)": {
        "intent": "Withdraw BAYC NFTs to recipient",
        "fields": [
          {
            "label": "BAYC NFTs",
            "format": "calldata",
            "params": {
              "components": [
                {
                  "name": "tokenId",
                  "type": "nftName",
                  "params": {
                    "collectionPath": "#.nfts[].contract"
                  }
                },
                {
                  "name": "amount",
                  "type": "tokenAmount",
                  "params": {
                    "tokenPath": "#.apeCoin"
                  }
                }
              ]
            },
            "path": "#._nfts",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens"
              ]
            },
            "path": "#._recipient",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "claimSelfBAKC((uint128,uint128)[],(uint128,uint128)[])": {
        "intent": "Claim BAKC rewards for BAYC and MAYC pairs",
        "fields": [
          {
            "label": "BAYC Pairs",
            "format": "calldata",
            "params": {
              "components": [
                {
                  "label": "Main Token Id",
                  "format": "nftName",
                  "params": {
                    "collectionPath": "apeCoin",
                    "tokenIdPath": "mainTokenId"
                  },
                  "path": "mainTokenId",
                  "isRequired": true,
                  "isIncluded": true
                },
                {
                  "label": "BAKC Token Id",
                  "format": "nftName",
                  "params": {
                    "collectionPath": "apeCoin",
                    "tokenIdPath": "bakcTokenId"
                  },
                  "path": "bakcTokenId",
                  "isRequired": true,
                  "isIncluded": true
                }
              ]
            },
            "path": "#._baycPairs.[]",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "MAYC Pairs",
            "format": "calldata",
            "params": {
              "components": [
                {
                  "label": "Main Token Id",
                  "format": "nftName",
                  "params": {
                    "collectionPath": "apeCoin",
                    "tokenIdPath": "mainTokenId"
                  },
                  "path": "mainTokenId",
                  "isRequired": true,
                  "isIncluded": true
                },
                {
                  "label": "BAKC Token Id",
                  "format": "nftName",
                  "params": {
                    "collectionPath": "apeCoin",
                    "tokenIdPath": "bakcTokenId"
                  },
                  "path": "bakcTokenId",
                  "isRequired": true,
                  "isIncluded": true
                }
              ]
            },
            "path": "#._maycPairs.[]",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens"
              ]
            },
            "path": "#._recipient",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "claimSelfBAYC(uint256[])": {
        "intent": "Deposit BAYC NFTs with specified amounts",
        "fields": [
          {
            "label": "NFTs to Deposit",
            "format": "calldata",
            "params": {
              "function": "depositBAYC",
              "components": [
                {
                  "label": "Token ID",
                  "format": "nftName",
                  "params": {
                    "types": [
                      "collection"
                    ],
                    "sources": [
                      "local",
                      "addressBook",
                      "userInput"
                    ]
                  },
                  "path": "#._nfts.[].tokenId",
                  "isRequired": true,
                  "isIncluded": true
                },
                {
                  "label": "Amount to Deposit",
                  "format": "tokenAmount",
                  "params": {
                    "tokenPath": "#.apeCoin"
                  },
                  "path": "#._nfts.[].amount",
                  "isRequired": true,
                  "isIncluded": true
                }
              ]
            },
            "path": "#._nfts",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "claimSelfMAYC(uint256[])": {
        "intent": "Deposit BAYC NFTs with specified amounts",
        "fields": [
          {
            "label": "NFTs to Deposit",
            "format": "calldata",
            "params": {
              "function": "depositBAYC",
              "components": [
                {
                  "label": "Token ID",
                  "format": "nftName",
                  "params": {
                    "types": [
                      "collection"
                    ],
                    "sources": [
                      "local",
                      "addressBook",
                      "userInput"
                    ]
                  },
                  "path": "#._nfts.[].tokenId"
                },
                {
                  "label": "Amount",
                  "format": "tokenAmount",
                  "params": {
                    "tokenPath": "#.apeCoin"
                  },
                  "path": "#._nfts.[].amount"
                }
              ]
            },
            "path": "#._nfts",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "depositApeCoin(uint256,address)": {
        "intent": "Deposit ApeCoin tokens to a recipient",
        "fields": [
          {
            "label": "Amount",
            "format": "tokenAmount",
            "params": {
              "tokenPath": "#.apeCoin"
            },
            "path": "#._amount",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#._recipient",
            "isRequired": true,
            "isIncluded": true
          }
        ]
      },
      "allowance(address,address)": {
        "intent": "Approve spender to spend tokens on behalf of owner",
        "fields": [
          {
            "label": "Owner",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#.owner",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Spender",
            "format": "addressName",
            "params": {
              "types": [
                "contract"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#.spender",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Amount",
            "format": "tokenAmount",
            "params": {
              "tokenPath": "#.token"
            },
            "path": "#.value",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#.owner",
          "#.spender",
          "#.value"
        ]
      },
      "approve(address,uint256)": {
        "intent": "Approve spender to use tokens",
        "fields": [
          {
            "label": "Spender",
            "format": "addressName",
            "params": {
              "types": [
                "contract",
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens"
              ]
            },
            "path": "#.spender",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Amount",
            "format": "tokenAmount",
            "params": {
              "tokenPath": "#.token"
            },
            "path": "#.value",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#.spender",
          "#.value"
        ]
      },
      "balanceOf(address)": {
        "intent": "Approve spender to spend tokens",
        "fields": [
          {
            "label": "Spender",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "contract"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens"
              ]
            },
            "path": "#.spender",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Amount",
            "format": "tokenAmount",
            "params": {
              "tokenPath": "#.token"
            },
            "path": "#.value",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#.spender",
          "#.value"
        ]
      },
      "transfer(address,uint256)": {
        "intent": "Transfer tokens to recipient",
        "fields": [
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#.to",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Amount",
            "format": "tokenAmount",
            "params": {
              "tokenPath": "#.token"
            },
            "path": "#.value",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#.to",
          "#.value"
        ]
      },
      "transferFrom(address,address,uint256)": {
        "intent": "Transfer tokens to recipient",
        "fields": [
          {
            "label": "Sender",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#.from",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Recipient",
            "format": "addressName",
            "params": {
              "types": [
                "eoa",
                "wallet"
              ],
              "sources": [
                "userInput",
                "addressBook",
                "ens",
                "local"
              ]
            },
            "path": "#.to",
            "isRequired": true,
            "isIncluded": true
          },
          {
            "label": "Amount",
            "format": "tokenAmount",
            "params": {
              "tokenPath": "#.token"
            },
            "path": "#.value",
            "isRequired": true,
            "isIncluded": true
          }
        ],
        "excluded": null,
        "required": [
          "#.from",
          "#.to",
          "#.value"
        ]
      }
    }
  }
}