{
  "$schema": "../../specs/erc7730-v1.schema.json",
  "context": {
    "$id": "ETH Staking Vault",
    "contract": {
      "deployments": [{ "chainId": 1, "address": "0xb36fc5e542cb4fc562a624912f55da2758998113" }],
      "abi": [
        {
          "type": "function",
          "name": "claimExitedAssets",
          "inputs": [
            {
              "name": "positionTicket",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            },
            { "name": "timestamp", "type": "uint256", "internalType": "uint256", "components": null, "indexed": null, "unit": null },
            {
              "name": "exitQueueIndex",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "deposit",
          "inputs": [
            { "name": "receiver", "type": "address", "internalType": "address", "components": null, "indexed": null, "unit": null },
            { "name": "referrer", "type": "address", "internalType": "address", "components": null, "indexed": null, "unit": null }
          ],
          "outputs": [{ "name": "shares", "type": "uint256", "internalType": "uint256", "components": null, "indexed": null, "unit": null }],
          "stateMutability": "payable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "enterExitQueue",
          "inputs": [
            { "name": "shares", "type": "uint256", "internalType": "uint256", "components": null, "indexed": null, "unit": null },
            { "name": "receiver", "type": "address", "internalType": "address", "components": null, "indexed": null, "unit": null }
          ],
          "outputs": [
            {
              "name": "positionTicket",
              "type": "uint256",
              "internalType": "uint256",
              "components": null,
              "indexed": null,
              "unit": null
            }
          ],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "multicall",
          "inputs": [{ "name": "data", "type": "bytes[]", "internalType": "bytes[]", "components": null, "indexed": null, "unit": null }],
          "outputs": [{ "name": "results", "type": "bytes[]", "internalType": "bytes[]", "components": null, "indexed": null, "unit": null }],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "updateState",
          "inputs": [
            {
              "name": "harvestParams",
              "type": "tuple",
              "internalType": "struct IKeeperRewards.HarvestParams",
              "components": [
                { "name": "rewardsRoot", "type": "bytes32", "internalType": "bytes32", "components": null },
                { "name": "reward", "type": "int160", "internalType": "int160", "components": null },
                { "name": "unlockedMevReward", "type": "uint160", "internalType": "uint160", "components": null },
                { "name": "proof", "type": "bytes32[]", "internalType": "bytes32[]", "components": null }
              ],
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [],
          "stateMutability": "nonpayable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        },
        {
          "type": "function",
          "name": "updateStateAndDeposit",
          "inputs": [
            { "name": "receiver", "type": "address", "internalType": "address", "components": null, "indexed": null, "unit": null },
            { "name": "referrer", "type": "address", "internalType": "address", "components": null, "indexed": null, "unit": null },
            {
              "name": "harvestParams",
              "type": "tuple",
              "internalType": "struct IKeeperRewards.HarvestParams",
              "components": [
                { "name": "rewardsRoot", "type": "bytes32", "internalType": "bytes32", "components": null },
                { "name": "reward", "type": "int160", "internalType": "int160", "components": null },
                { "name": "unlockedMevReward", "type": "uint160", "internalType": "uint160", "components": null },
                { "name": "proof", "type": "bytes32[]", "internalType": "bytes32[]", "components": null }
              ],
              "indexed": null,
              "unit": null
            }
          ],
          "outputs": [{ "name": "shares", "type": "uint256", "internalType": "uint256", "components": null, "indexed": null, "unit": null }],
          "stateMutability": "payable",
          "constant": null,
          "payable": null,
          "gas": null,
          "signature": null
        }
      ],
      "addressMatcher": null,
      "factory": null
    }
  },
  "metadata": { "owner": "Serenita", "info": { "legalName": "Serenita B.V.", "url": "https://serenita.io/" } },
  "display": {
    "formats": {
      "claimExitedAssets(uint256,uint256,uint256)": {
        "intent": "claim exited assets",
        "fields": [],
        "required": [],
        "excluded": ["#.positionTicket", "#.timestamp", "#.exitQueueIndex"]
      },
      "deposit(address,address)": {
        "intent": "deposit and stake ETH",
        "fields": [
          {
            "label": "Receiver",
            "format": "addressName",
            "params": { "types": ["eoa", "wallet"], "sources": ["local", "ens"] },
            "path": "#.receiver"
          },
          { "label": "Amount to stake", "format": "amount", "path": "@.value" }
        ],
        "required": ["#.receiver"],
        "excluded": ["#.referrer"]
      },
      "enterExitQueue(uint256,address)": {
        "intent": "enter exit queue",
        "fields": [
          { "label": "Shares to lock", "format": "raw", "path": "#.shares" },
          {
            "label": "Assets Receiver",
            "format": "addressName",
            "params": { "types": ["eoa", "wallet"], "sources": ["local", "ens"] },
            "path": "#.receiver"
          }
        ],
        "required": ["#.shares", "#.receiver"]
      },
      "multicall(bytes[])": {
        "intent": "call multiple methods",
        "fields": [{ "label": "Call", "path": "#.data.[]", "format": "calldata", "params": { "calleePath": "@.to" } }],
        "required": ["#.data.[]"]
      },
      "updateState((bytes32,int160,uint160,bytes32[]))": {
        "intent": "update vault's internal state",
        "fields": [],
        "required": [],
        "excluded": ["#.harvestParams.rewardsRoot", "#.harvestParams.reward", "#.harvestParams.unlockedMevReward", "#.harvestParams.proof.[]"]
      },
      "updateStateAndDeposit(address,address,(bytes32,int160,uint160,bytes32[]))": {
        "intent": "deposit and stake ETH",
        "fields": [
          {
            "label": "Receiver",
            "format": "addressName",
            "params": { "types": ["eoa", "wallet"], "sources": ["local", "ens"] },
            "path": "#.receiver"
          },
          { "label": "Amount to stake", "format": "amount", "path": "@.value" }
        ],
        "required": ["#.receiver"],
        "excluded": [
          "#.referrer",
          "#.harvestParams.rewardsRoot",
          "#.harvestParams.reward",
          "#.harvestParams.unlockedMevReward",
          "#.harvestParams.proof.[]"
        ]
      }
    }
  }
}
