{
    "$schema": "../../specs/erc7730-v1.schema.json",

    "metadata": {
        "owner": "1inch",
        "info": {
            "url": "https://1inch.io/",
            "legalName": "1inch Network",
            "lastUpdate": "2021-11-05T10:18:09Z"
        },
        "constants": {
            "addressAsEth": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
            "addressAsNull": "0x0000000000000000000000000000000000000000"
        }
    },

    "display": {
        "definitions": {
            "sendAmount": {
                "label": "Amount to Send",
                "format": "tokenAmount",
                "params": {
                    "nativeCurrencyAddress": [
                        "$.metadata.constants.addressAsEth",
                        "$.metadata.constants.addressAsNull"
                    ]
                }
            },
            "minReceiveAmount": {
                "label": "Minimum to Receive",
                "format": "tokenAmount",
                "params": {
                    "nativeCurrencyAddress": [
                        "$.metadata.constants.addressAsEth",
                        "$.metadata.constants.addressAsNull"
                    ]
                }
            },
            "beneficiary": {
                "label": "Beneficiary",
                "format": "addressName"
            }
        },
        "formats": {
            "swap(address caller, (address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 flags, bytes permit) desc, bytes data)" : {
                "$id": "swap",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "desc.amount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "desc.srcToken" }
                    },
                    {
                        "path": "desc.minReturnAmount",
                        "$ref": "$.display.definitions.minReceiveAmount",
                        "params": { "tokenPath": "desc.dstToken" }
                    },
                    {
                        "path": "desc.dstReceiver",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["desc.amount", "desc.minReturnAmount", "desc.dstReceiver"],
                "excluded": ["caller", "desc.srcReceiver", "desc.flags", "desc.permit", "data"]
            },
            "unoswap(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools)" : {
                "$id": "unoswap",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "amount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "srcToken" }
                    },
                    {
                        "path": "minReturn",
                        "$ref": "$.display.definitions.minReceiveAmount"
                    },
                    {
                        "path": "@.from",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["amount", "minReturn", "@.from"],
                "excluded": ["pools"]
            },
            "unoswapWithPermit(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools, bytes permit)" : {
                "$id": "unoswapWithPermit",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "amount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "srcToken" }
                    },
                    {
                        "path": "minReturn",
                        "$ref": "$.display.definitions.minReceiveAmount"
                    },
                    {
                        "path": "@.from",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["amount", "minReturn", "@.from"],
                "excluded": ["pools", "permit"]
            },
            "uniswapV3Swap(uint256 amount, uint256 minReturn, uint256[] pools)" : {
                "$id": "uniswapV3Swap",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "amount",
                        "$ref": "$.display.definitions.sendAmount"
                    },
                    {
                        "path": "minReturn",
                        "$ref": "$.display.definitions.minReceiveAmount"
                    },
                    {
                        "path": "@.from",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["amount", "minReturn", "@.from"],
                "excluded": ["pools"]
            },
            "uniswapV3SwapTo(address recipient, uint256 amount, uint256 minReturn, uint256[] pools)" : {
                "$id": "uniswapV3SwapTo",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "amount",
                        "$ref": "$.display.definitions.sendAmount"
                    },
                    {
                        "path": "minReturn",
                        "$ref": "$.display.definitions.minReceiveAmount"
                    },
                    {
                        "path": "recipient",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["amount", "minReturn", "recipient"],
                "excluded": ["pools"]
            },
            "uniswapV3SwapToWithPermit(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools, bytes permit)" : {
                "$id": "uniswapV3SwapToWithPermit",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "amount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "srcToken" }
                    },
                    {
                        "path": "minReturn",
                        "$ref": "$.display.definitions.minReceiveAmount"
                    },
                    {
                        "path": "recipient",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["amount", "minReturn", "recipient"],
                "excluded": ["pools", "permit"]
            },
            "fillOrderRFQ((uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 makingAmount, uint256 takingAmount)" : {
                "$id": "fillOrderRFQ",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "order.takingAmount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "order.takerAsset" }
                    },
                    {
                        "path": "order.makingAmount",
                        "$ref": "$.display.definitions.minReceiveAmount",
                        "params": { "tokenPath": "order.makerAsset" }
                    },
                    {
                        "path": "@.from",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["order.takingAmount", "order.makingAmount", "@.from"],
                "excluded": ["order.info", "order.maker", "order.allowedSender", "signature", "makingAmount", "takingAmount"]
            },
            "fillOrderRFQTo((uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target)" : {
                "$id": "fillOrderRFQTo",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "order.takingAmount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "order.takerAsset" }
                    },
                    {
                        "path": "order.makingAmount",
                        "$ref": "$.display.definitions.minReceiveAmount",
                        "params": { "tokenPath": "order.makerAsset" }
                    },
                    {
                        "path": "target",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["order.takingAmount", "order.makingAmount", "target"],
                "excluded": ["order.info", "order.maker", "order.allowedSender", "signature", "makingAmount", "takingAmount"]
            },
            "fillOrderRFQToWithPermit((uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target, bytes permit)" : {
                "$id": "fillOrderRFQToWithPermit",
                "intent": "Swap",
                "fields": [
                    {
                        "path": "order.takingAmount",
                        "$ref": "$.display.definitions.sendAmount",
                        "params": { "tokenPath": "order.takerAsset" }
                    },
                    {
                        "path": "order.makingAmount",
                        "$ref": "$.display.definitions.minReceiveAmount",
                        "params": { "tokenPath": "order.makerAsset" }
                    },
                    {
                        "path": "target",
                        "$ref": "$.display.definitions.beneficiary"
                    }
                ],
                "required": ["order.takingAmount", "order.makingAmount", "target"],
                "excluded": ["order.info", "order.maker", "order.allowedSender", "signature", "makingAmount", "takingAmount", "permit"]
            }
        }
    }
}
